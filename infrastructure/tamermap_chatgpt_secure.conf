# ────────────────────────────────────────────────────────────
# Tamermap Secure Configuration (ChatGPT Recommendations)
# ────────────────────────────────────────────────────────────

# Default server blocks to drop raw IP hits (return 444 = connection drop)
server {
    listen 80 default_server;
    return 444;
}

server {
    listen 443 ssl default_server;
    ssl_certificate /etc/nginx/ssl/dummy.crt;
    ssl_certificate_key /etc/nginx/ssl/dummy.key;
    return 444;
}

# HTTP → HTTPS redirect
server {
    listen 80;
    server_name tamermap.com www.tamermap.com dev.tamermap.com;
    return 301 https://$host$request_uri;
}

# Secure HTTPS server block
server {
    listen 443 ssl http2;
    server_name tamermap.com www.tamermap.com dev.tamermap.com;

    # ────────────────────────────────────────────────────────────
    # Cloudflare IP Protection (ENABLED)
    # ────────────────────────────────────────────────────────────
    include /etc/nginx/includes/cloudflare_allow.conf;

    # ────────────────────────────────────────────────────────────
    # SSL certificates with Authenticated Origin Pulls (AOP)
    # ────────────────────────────────────────────────────────────
    ssl_certificate     /etc/nginx/ssl/tamermap/tamermap_bundle.crt;
    ssl_certificate_key /etc/nginx/ssl/tamermap/tamermap.key;
    ssl_protocols       TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers         HIGH:!aNULL:!MD5;
    
    # Authenticated Origin Pulls (mTLS client cert verification)
    # Uncomment these lines after setting up AOP in Cloudflare:
    # ssl_client_certificate /etc/nginx/ssl/cloudflare-aop.crt;
    # ssl_verify_client on;
    # ssl_verify_depth 1;

    # ────────────────────────────────────────────────────────────
    # CSP Header
    # ────────────────────────────────────────────────────────────
    proxy_hide_header Content-Security-Policy;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' https://cdn.jsdelivr.net https://cdnjs.cloudflare.com https://maps.googleapis.com https://code.jquery.com https://cdn.datatables.net https://js.stripe.com; script-src-elem 'self' 'unsafe-inline' https://cdn.jsdelivr.net https://cdnjs.cloudflare.com https://maps.googleapis.com https://code.jquery.com https://cdn.datatables.net https://js.stripe.com; style-src 'self' 'unsafe-inline' https://cdn.jsdelivr.net https://fonts.googleapis.com https://cdnjs.cloudflare.com https://cdn.datatables.net; style-src-elem 'self' 'unsafe-inline' https://cdn.jsdelivr.net https://fonts.googleapis.com https://cdnjs.cloudflare.com https://cdn.datatables.net; font-src 'self' https://fonts.gstatic.com https://maps.gstatic.com https://cdnjs.cloudflare.com; img-src 'self' data: https://maps.googleapis.com https://maps.gstatic.com; frame-src 'self' https://js.stripe.com https://hooks.stripe.com; connect-src 'self' https://maps.googleapis.com https://api.stripe.com;" always;

    # ────────────────────────────────────────────────────────────
    # Security includes
    # ────────────────────────────────────────────────────────────
    include /etc/nginx/snippets/security_server.conf;

    # ────────────────────────────────────────────────────────────
    # Secure monitoring (replace spoofable User-Agent)
    # ────────────────────────────────────────────────────────────
    # Secret header approach - add this to Cloudflare Origin Rules:
    # X-Monitor-Secret: YOUR_SECRET_HERE
    map $http_x_monitor_secret $is_monitor {
        default 0;
        "CHANGE_THIS_SECRET" 1;
    }

    # Health check with secret protection
    location /health {
        if ($is_monitor = 0) { return 444; }
        access_log off;
        return 200 "OK";
        add_header Content-Type text/plain;
    }

    # ────────────────────────────────────────────────────────────
    # Application locations
    # ────────────────────────────────────────────────────────────
    
    # Stripe webhooks
    location /webhooks/stripe {
        limit_req zone=api burst=30 nodelay;
        client_max_body_size 10m;

        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_pass http://127.0.0.1:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header CF-Connecting-IP $http_cf_connecting_ip;
    }

    # API endpoints
    location /api/ {
        limit_req zone=api burst=30 nodelay;
        client_max_body_size 10m;

        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_pass http://127.0.0.1:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header CF-Connecting-IP $http_cf_connecting_ip;
    }

    # Static assets
    location /static/ {
        alias /home/tamermap/app/static/;
    }

    # Main application
    location / {
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        gzip off;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header CF-Connecting-IP $http_cf_connecting_ip;

        proxy_set_header Accept-Encoding "";
        proxy_hide_header Content-Encoding;
        proxy_buffering off;

        proxy_pass http://127.0.0.1:8000;
    }
}
