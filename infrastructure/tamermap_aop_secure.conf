# ────────────────────────────────────────────────────────────
# Tamermap with Authenticated Origin Pulls (AOP)
# Implements ChatGPT Step 3: Cryptographic Cloudflare verification
# ────────────────────────────────────────────────────────────

# Default server blocks to drop raw IP hits (444 = connection drop)
server {
    listen 80 default_server;
    return 444;
}

server {
    listen 443 ssl default_server;
    # Minimal SSL config for default server
    ssl_certificate /etc/nginx/ssl/tamermap/tamermap_bundle.crt;
    ssl_certificate_key /etc/nginx/ssl/tamermap/tamermap.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    return 444;
}

# HTTP → HTTPS redirect
server {
    listen 80;
    server_name tamermap.com www.tamermap.com dev.tamermap.com;
    return 301 https://$host$request_uri;
}

# Main HTTPS server block with AOP
server {
    listen 443 ssl http2;
    server_name tamermap.com www.tamermap.com dev.tamermap.com;

    # ────────────────────────────────────────────────────────────
    # SSL Configuration with AOP
    # ────────────────────────────────────────────────────────────
    ssl_certificate     /etc/nginx/ssl/tamermap/tamermap_bundle.crt;
    ssl_certificate_key /etc/nginx/ssl/tamermap/tamermap.key;
    ssl_protocols       TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers         HIGH:!aNULL:!MD5;

    # ────────────────────────────────────────────────────────────
    # Authenticated Origin Pulls (AOP) - CRITICAL SECURITY
    # ────────────────────────────────────────────────────────────
    ssl_client_certificate /etc/nginx/ssl/cloudflare/aop_ca.pem;
    ssl_verify_client on;    # FAIL if no valid Cloudflare client cert
    ssl_verify_depth 1;

    # Restore real visitor IP from Cloudflare
    real_ip_header CF-Connecting-IP;
    real_ip_recursive on;

    # ────────────────────────────────────────────────────────────
    # CSP Header
    # ────────────────────────────────────────────────────────────
    proxy_hide_header Content-Security-Policy;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' https://cdn.jsdelivr.net https://cdnjs.cloudflare.com https://maps.googleapis.com https://code.jquery.com https://cdn.datatables.net https://js.stripe.com; script-src-elem 'self' 'unsafe-inline' https://cdn.jsdelivr.net https://cdnjs.cloudflare.com https://maps.googleapis.com https://code.jquery.com https://cdn.datatables.net https://js.stripe.com; style-src 'self' 'unsafe-inline' https://cdn.jsdelivr.net https://fonts.googleapis.com https://cdnjs.cloudflare.com https://cdn.datatables.net; style-src-elem 'self' 'unsafe-inline' https://cdn.jsdelivr.net https://fonts.googleapis.com https://cdnjs.cloudflare.com https://cdnjs.cloudflare.com https://cdn.datatables.net; font-src 'self' https://fonts.gstatic.com https://maps.gstatic.com https://cdnjs.cloudflare.com; img-src 'self' data: https://maps.googleapis.com https://maps.gstatic.com; frame-src 'self' https://js.stripe.com https://hooks.stripe.com; connect-src 'self' https://maps.googleapis.com https://api.stripe.com;" always;

    # ────────────────────────────────────────────────────────────
    # 444 Response Optimizations (from Step 2)
    # ────────────────────────────────────────────────────────────
    
    # Block dangerous file extensions with 444
    location ~* \.(?:php[345]?|phtml|pl|py|jsp|asp|sh|cgi)$ {
        return 444;
    }

    # Block wrapper/stream attacks with 444
    location ~* (?:php://|data://|file://|ftp://|https?://) {
        return 444;
    }

    # Block suspicious query parameters with 444
    if ($args ~* "(?:phpinfo|eval|base64|system|exec|shell)") {
        return 444;
    }

    # Block suspicious referer headers with 444
    if ($http_referer ~* "(?:phpinfo|eval|base64|system)") {
        return 444;
    }

    # Block hidden, backup and system files with 444
    location ~ /\.(?!well-known) {
        return 444;
    }
    location ~ ~\$ {
        return 444;
    }

    # ────────────────────────────────────────────────────────────
    # Application locations (unchanged)
    # ────────────────────────────────────────────────────────────
    
    # Stripe webhooks
    location /webhooks/stripe {
        limit_req zone=api burst=30 nodelay;
        client_max_body_size 10m;

        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_pass http://127.0.0.1:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header CF-Connecting-IP $http_cf_connecting_ip;
    }

    # API endpoints
    location /api/ {
        limit_req zone=api burst=30 nodelay;
        client_max_body_size 10m;

        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_pass http://127.0.0.1:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header CF-Connecting-IP $http_cf_connecting_ip;
    }

    # Static assets
    location /static/ {
        alias /home/tamermap/app/static/;
    }

    # Admin panel
    location /admin/ {
        client_max_body_size 5m;

        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header CF-Connecting-IP $http_cf_connecting_ip;
        proxy_set_header Accept-Encoding "";
        proxy_hide_header Content-Encoding;
        proxy_buffering off;

        proxy_pass http://127.0.0.1:8000;
    }

    # Main application
    location / {
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        gzip off;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header CF-Connecting-IP $http_cf_connecting_ip;

        proxy_set_header Accept-Encoding "";
        proxy_hide_header Content-Encoding;
        proxy_buffering off;

        proxy_pass http://127.0.0.1:8000;
    }
}
